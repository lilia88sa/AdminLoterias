security:
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    encoders:
        App\Entity\Security\User:
            algorithm: auto

    providers:
        chain_provider:
          chain:
            providers:    [database, users]
        database:
            entity:
                class: App\Entity\Security\User
                property: username
        users:
            id: App\Providers\UserProvider

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        api_doc:
            pattern:  ^/api/doc
            stateless: true
            anonymous: true

        login:
            pattern:  ^/api/login
            stateless: true
            anonymous: true
            provider: database
            json_login:
                check_path:               /api/login_check
                success_handler:          lexik_jwt_authentication.handler.authentication_success
                failure_handler:          lexik_jwt_authentication.handler.authentication_failure
            user_checker: App\Service\Security\UserEnabledChecker

        account-confirm:
            methods: [POST]
            pattern: ^/api/users/account-confirm
            anonymous : true

        account-reset-password-email:
            methods: [POST]
            pattern: ^/api/user/reset-password
            anonymous : true

        account-recover-password:
            methods: [POST]
            pattern: ^/api/user/recover-password
            anonymous : true


        check-token-post:
            methods: [POST]
            pattern: ^/api/users/validate-token
            anonymous : true

        get-user-by-token:
            methods: [POST]
            pattern: ^/api/user/get-user-by-token
            anonymous : true


        api:
            pattern: ^/api
            stateless: true
            provider: database
            guard:
                authenticators:
                    - App\Service\Security\TokenAuthenticator

        admin:
            pattern:            /admin(.*)
            form_login:
                provider:       users
                login_path:     admin_login
                use_forward:    false
                check_path:     admin_login
                failure_path:   null
            logout:
                path:           admin_logout
                target:         admin_login
            anonymous:          true
            provider:           users
            guard:
                authenticators:
                    - App\Service\Security\AdminLoginAuthenticator

        front:
            pattern:            /(.*)
            provider:       users
            anonymous:      true

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/api/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/docs, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin/registro$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin/recover-password-email$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin/account-confirm/, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin/new-password/, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin/logout$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin/, role: [ROLE_USER, ROLE_ADMIN, ROLE_SUPER_ADMIN, ROLE_EDITOR, ROLE_WRITER] }
#        - { path: ^/api,       roles: IS_AUTHENTICATED_FULLY }

    role_hierarchy:
        ROLE_SUPER_ADMIN: [ROLE_ADMIN]
        ROLE_ADMIN: [ROLE_USER, ROLE_SONATA_ADMIN]
        ROLE_EDITOR:
            - ROLE_USER
            - ROLE_WRITER
#            - ROLE_ADMIN_SECURITY_USER_LIST
#            - ROLE_ADMIN_SECURITY_USER_VIEW
#            - ROLE_ADMIN_SECURITY_USER_ALL
            - ROLE_ADMIN_SECTION_ALL
            - ROLE_ADMIN_CATEGORY_ALL
            - ROLE_ADMIN_POST_ALL
            - ROLE_ADMIN_KEY_WORDS_ALL
            - ROLE_ADMIN_COMMENTS_ALL
            - ROLE_ADMIN_PDF_ALL
            - ROLE_ADMIN_ENTITIES_ALL
        ROLE_WRITER:
            - ROLE_USER
#            - ROLE_ADMIN_SECTION_ALL
#            - ROLE_ADMIN_CATEGORY_ALL
            - ROLE_ADMIN_POST_ALL
            - ROLE_ADMIN_KEY_WORDS_ALL
            - ROLE_ADMIN_PDF_ALL
        ROLE_USER:
            - ROLE_ADMIN_ENTITIES_LIST
            - ROLE_ADMIN_ENTITIES_EDIT
            - ROLE_ADMIN_ENTITIES_SHOW

#acl:
#  connection: default